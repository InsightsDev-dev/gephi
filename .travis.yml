addons:
  apt:
    packages:
    - wine
    - build-essential
    - cmake
    - libboost-all-dev
    - liblzma-dev
  artifacts:
    debug: true
    paths:
    - libs.zip
    - build.zip
    - testbuild.zip
    - jacoco.exec
    target_paths: a7abc9ae-a90d-4d02-9993-bda6cc5dee28
after_script:
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then ./src/travis/remove-key.sh;fi
after_success:
- ' wget --content-disposition http://search.maven.org/remotecontent?filepath=org/jacoco/jacoco/0.7.7.201606060606/jacoco-0.7.7.201606060606.zip '
- ' unzip -o jacoco-0.7.7.201606060606.zip  '
- ' cd lib  '
- ' mv * ../  '
- ' cd ..  '
- ' chmod a+x *  '
- ' cd $PWD  '
- ' rm  ''jacoco.exec'''
- ' export JAVA_TOOL_OPTIONS=-javaagent:$PWD/jacocoagent.jar=destfile=$PWD/jacoco.exec,append=true  '
- ' travis_wait 360 mvn  test -Dmaven.test.failure.ignore=true -Djacoco.skip=true
  -Dcobertura.skip=true -Dmaven.clover.skip=true -Dmaven.javadoc.skip=true -Drat.skip=true
  -Drat.ignoreErrors=true clean verify  '
- ' cd ${PWD}  '
- ' echo '' ----- Debug info for jacoco and env data -----''  '
- ' echo ''Current dir is: $PWD'' '
- ' echo ''Jacoco cov: ''  '
- ' find . -name ''*.exec''  '
- ' echo '' ----------------------------------------------'' '
- ./df-build.sh
before_install:
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then export JAVA_HOME=$(/usr/libexec/java_home);fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then git clone --branch 1.5 https://github.com/dscharrer/innoextract.git;fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd innoextract && mkdir -p build && cd
  build && cmake .. && make && export PATH=$PATH:$PWD && cd ../..;fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then openssl aes-256-cbc -k "$ENCRYPTION_SECRET"
  -in src/travis/certs/dev_id.cer.enc -d -a -out src/travis/certs/dev_id.cer;fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then openssl aes-256-cbc -k "$ENCRYPTION_SECRET"
  -in src/travis/certs/dev_id.p12.enc -d -a -out src/travis/certs/dev_id.p12;fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then ./src/travis/add-key.sh;fi
- openssl aes-256-cbc -k "$GPG_PUBRING_ENCRYPTION" -in src/travis/pubring.gpg.enc
  -d -a -out src/travis/pubring.gpg
- openssl aes-256-cbc -k "$GPG_SECRETRING_ENCRYPTION" -in src/travis/secretring.gpg.enc
  -d -a -out src/travis/secretring.gpg
before_script:
- echo "<settings><servers><server><id>ossrh</id><username>\${env.OSSRH_USER}</username><password>\${env.OSSRH_PASS}</password></server><server><id>netbeans</id></server></servers><profiles><profile><id>deployment</id><properties><keystore.password>\${env.KEYSTORE_PASSWD}</keystore.password><gpg.passphrase>\${env.GPG_PASSPHRASE}</gpg.passphrase></properties></profile></profiles></settings>"
  > ~/settings.xml
branches: ''
cache:
  directories:
  - $HOME/.m2
  - $HOME/.m2
install:
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then printf '#!/bin/bash\nrm -rf /tmp/inno\nmkdir
  /tmp/inno\ncd /tmp/inno\nwget -O is.exe http://files.jrsoftware.org/is/5/isetup-5.5.5.exe\ninnoextract
  is.exe\nmkdir -p ~/\".wine/drive_c/inno\"\ncp -a app/* ~/\".wine/drive_c/inno\"'
  > innoinstall.sh && chmod +x ./innoinstall.sh && ./innoinstall.sh;fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then printf '#!/bin/sh\nexport DISPLAY=\":0.0\"\nscriptname=$1\n[
  -f \"$scriptname\" ] && scriptname=$(winepath -w \"$scriptname\")\nwine \"C:\inno\ISCC.exe\"
  \"$scriptname\" \"/q\"' > iscc && chmod +x ./iscc && export PATH=$PATH:$PWD;fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then cp modules/application/src/main/app-resources/ReplaceVistaIcon.exe
  ~/".wine/drive_c/ReplaceVistaIcon.exe" && printf '#!/bin/sh\nunset DISPLAY\nexecutable=$1\niconfile=$2\niconid=$3\nwine
  "C:\ReplaceVistaIcon.exe" "$executable" "$iconfile" "$iconid"' > replacevistaicon
  && chmod +x ./replacevistaicon;fi
language: java
matrix:
  include:
  - before_install:
    - sed -i.bak -e 's|https://nexus.codehaus.org/snapshots/|https://oss.sonatype.org/content/repositories/codehaus-snapshots/|g'
      $HOME/.m2/settings.xml
    os: osx
    osx_image: xcode7.1
notifications:
  webhooks:
    on_failure: always
    on_start: always
    on_success: always
    urls:
    - http://insights-portal-insights-service-webserver-dev.public-swarm.devfactory.com/travisWebHookListener?build_id=a7abc9ae-a90d-4d02-9993-bda6cc5dee28
script:
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then travis_retry mvn --batch-mode --settings
  ~/settings.xml -Djava.awt.headless=true -Dgpg.defaultKeyring=false -Dgpg-keyname=1481F619
  -Dgpg.publicKeyring=src/travis/pubring.gpg -Dgpg.secretKeyring=src/travis/secretring.gpg
  clean deploy -P deployment,create-modules,create-sources,create-javadoc,create-autoupdate,replace-windows-icon,create-exe,create-targz;fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then travis_retry mvn --batch-mode --settings
  ~/settings.xml -Djava.awt.headless=true -Dgpg.defaultKeyring=false -Dgpg-keyname=1481F619
  -Dgpg.publicKeyring=src/travis/pubring.gpg -Dgpg.secretKeyring=src/travis/secretring.gpg
  clean deploy -P deployment,create-dmg;fi
sudo: false
# Modified by Insights Service at 2016-11-09 18:20:43.863281
